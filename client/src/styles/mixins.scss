@use "./variables" as v;

@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin position(
  $position,
  $top: null,
  $right: null,
  $bottom: null,
  $left: null
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: v.$breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: v.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: v.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: v.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: v.$breakpoint-xl) {
      @content;
    }
  }
}

@mixin button(
  $bg-color: v.$primary-color,
  $text-color: white,
  $hover-bg: darken($bg-color, 10%),
  $hover-text: white
) {
  display: inline-block;
  padding: v.$spacing-md v.$spacing-xl;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: v.$border-radius-md;
  font-weight: v.$font-weight-medium;
  cursor: pointer;
  transition: all v.$transition-normal;

  &:hover {
    background-color: $hover-bg;
    color: $hover-text;
  }
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}
